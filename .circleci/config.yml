version: 2

jobs:
  prettier:
    docker: 
      - image: 'circleci/node:latest'
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Restore npm dependencies
          command: npm install
      - run:
          name: Run prettier
          command: |
            npx prettier --check "frontend/sass/**/*.{scss,js}"
      - save_cache:
          paths:
            - node_modules
          key: npm-dependencies-{{ checksum "package-lock.json" }}  

  python_code_style:
    docker:
      - image: circleci/python:3.9.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-dependencies-3.9-{{ checksum "requirements/dev.txt" }}
      - run:
          name: Create virtualenv and install dependencies
          command: |
              python3 -m venv env
              . env/bin/activate
              pip install -r requirements/dev.txt          
      - run:
          name: Run black
          command: |
            source env/bin/activate
            black . --check
      - run:
          name: flake8
          command: |
            source env/bin/activate
            flake8 --count
      - save_cache:
          paths:
            - env
          key: pip-dependencies-3.9-{{ checksum "requirements/dev.txt" }}
  test:
    working_directory: ~/app
    docker:
      - image: circleci/python:3.9.2
        environment:
          DJANGO_SETTINGS_CONFIG: helpcentre.settings.dev
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/helpcentre

          AUTHBROKER_CLIENT_ID: not_the_real_client_id
          AUTHBROKER_CLIENT_SECRET: not_the_real_client_secret
          AUTHBROKER_URL: https://url.to.sso
            
          FEED_API_TOKEN: test
          FEEDBACK_URL: http://path.to.feedback
          DEBUG: True
          
      - image: postgres:11
        environment:
          POSTGRES_DB: helpcentre
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - restore_cache:
          name: Restore pip cache
          key: pip-dependencies-3.9-{{ checksum "requirements/dev.txt" }}
          paths:
            - ~/cache/pip
      - run:
          name: Install dependencies
          command: python -m pip install --cache-dir ~/cache/pip --progress-bar off -r requirements/dev.txt
      - save_cache:
          name: Save pip cache
          key: pip-dependencies-3.9-{{ checksum "requirements/dev.txt" }}
          paths:
            - ~/cache/pip
      - run:
          name: Run tests
          command: python manage.py test

workflows:
  version: 2
  build:
    jobs:
      - test
      - prettier
      - python_code_style      
